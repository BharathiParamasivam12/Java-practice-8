package com.java.practice.Interview.Reference.Accolite;

import java.util.ArrayList;
import java.util.List;
import java.util.function.Predicate;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Myclass {
    // minimum window substring 
    
    public static void main(String[] args) {
       /**
        String input1 = "ADOBECODCBANC";
        String input2 = "ABC";

        List<String> list = new ArrayList<>();
        StringBuilder sb = new StringBuilder();
        char[] inputChar = input1.toCharArray();
        int len = input1.length() / input2.length();
        System.out.println(len);

        for(int i=0; i< len; i++){
            for(int j=0; j<input2.length();j++){
        //        j = 
      //      sb.append(inputChar[j]);
           }
            list.add(sb.toString());
        
        }
         
         
            System.out.println(list);
            **/

           /// to find positive integers and divisible by 2
           
            int[] ar = new int[]{2,0,-3,8,-4};
            List<Integer> mylist =     IntStream.of(ar)
                        .map(i -> (int)i)
                        .filter(in -> in>0)
                        .filter(in -> in%2 ==0)
                        .boxed()
                        .collect(Collectors.toList());

                mylist.forEach(System.out::println);
            }


            Employee Department 

            Select * from Employee 
            INNER JOIN Department ON Employee.id = Department.empId
            
}
